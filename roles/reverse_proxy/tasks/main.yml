---
- name: Docker module was installed
  pip:
    name:
      - docker

- name: Create internal network
  docker_network:
    name: "{{ reverse_proxy_network }}"
    driver_options:
      com.docker.network.bridge.name: "{{ reverse_proxy_network }}"

- name: Create nginx volumes
  docker_volume:
    name: "{{ item }}"
  with_items:
    - "nginx_conf"
    - "nginx_certs"
    - "nginx_vhost"
    - "nginx_html"

- include_tasks: tasks/pull.yml
  vars:
    reverse_proxy_pull_image: "{{ reverse_proxy_nginx }}"

- name: Nginx container is running
  docker_container:
    name: nginx
    image: "{{ reverse_proxy_nginx.image }}:{{ reverse_proxy_nginx.tag }}"
    state: started
    restart_policy: always
    volumes:
      - "nginx_conf:/etc/nginx/conf.d:rw"
      - "nginx_certs:/etc/nginx/certs:ro"
      - "nginx_vhost:/etc/nginx/vhost.d:rw"
      - "nginx_html:/usr/share/nginx/html:rw"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - name: "{{ reverse_proxy_network }}"
    log_driver: "json-file"
    log_options:
      max-size: '{{ reverse_proxy_nginx.options.log_max_size }}'
      max-file: '{{ reverse_proxy_nginx.options.log_max_file }}'

- name: Create docker-gen config dir
  file:
    path: '{{ reverse_proxy_tmpl_dir }}'
    state: directory
    mode: 0755

- name: Download docker-gen template
  get_url:
    url: "https://raw.githubusercontent.com/jwilder/nginx-proxy/master/nginx.tmpl"
    dest: '{{ reverse_proxy_tmpl_dir }}'
  register: download_template
  until: download_template is succeeded
  retries: 3
  delay: 5

- include_tasks: tasks/pull.yml
  vars:
    reverse_proxy_pull_image: "{{ reverse_proxy_docker_gen }}"

- name: Run docker-gen container
  docker_container:
    name: docker-gen
    image: '{{ reverse_proxy_docker_gen.image }}:{{ reverse_proxy_docker_gen.tag }}'
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "nginx_certs:/etc/nginx/certs:ro"
      - "nginx_conf:/etc/nginx/conf.d:rw"
      - "nginx_vhost:/etc/nginx/vhost.d:rw"
      - "nginx_html:/usr/share/nginx/html:rw"
      - "{{ reverse_proxy_tmpl_dir }}/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    networks:
      - name: "{{ reverse_proxy_network }}"
    restart_policy: always
    command: "-notify-sighup nginx -watch /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf"

- include_tasks: tasks/pull.yml
  vars:
    reverse_proxy_pull_image: "{{ reverse_proxy_lets_encrypt }}"

- name: Let's encrypt container is running
  docker_container:
    name: lets-encrypt
    image: '{{ reverse_proxy_lets_encrypt.image }}:{{ reverse_proxy_lets_encrypt.tag }}'
    state: started
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "nginx_certs:/etc/nginx/certs:rw"
      - "nginx_conf:/etc/nginx/conf.d:rw"
      - "nginx_vhost:/etc/nginx/vhost.d:rw"
      - "nginx_html:/usr/share/nginx/html:rw"
    networks:
      - name: "{{ reverse_proxy_network }}"
    restart_policy: always
    env:
      NGINX_DOCKER_GEN_CONTAINER: docker-gen
      NGINX_PROXY_CONTAINER: nginx
